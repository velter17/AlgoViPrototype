/**
 * Project   AlgoVi
 *
 * @file     CViewerController.h
 * @author   Dmytro Sadovyi
 * @date     27.02.2017
 */

#pragma once

#include <QObject>
#include <memory>
#include <map>
#include <QDebug>

#include "View/components/IAlgoViItem.h"
#include "View/CGraphicView.h"
#include "framework/Commands/ProblemSolver/CVisualViewer.h"
#include "View/problems/IProblemVisualizer.h"
#include "framework/Commands/ProblemSolver/CCompilerHandler.h"

namespace NView
{

class CViewerController : public QObject
{
    Q_OBJECT
public: // methods
    CViewerController(std::shared_ptr<CGraphicView> view,
                             std::shared_ptr<NCommand::CCompilerHandler> compilerHandler,
                             NCommand::CVisualViewer* visualSolver);
    ~CViewerController();

    void finish();

public slots: // methods
    void updateResult(const QString& data);
    void handleInput(const QString& data);

private slots: // methods
    void addPoint(const QPoint& p);

private: // methods
    void update();
    void initVisualizer();

signals:
    void sceneChanged(const QString& data);

private: // fields
    std::shared_ptr <CGraphicView> mView;
    std::shared_ptr <IProblemVisualizer> mVisualizer;
    NCommand::CVisualSolver* mVisualSolver;
    std::shared_ptr<NCommand::CCompilerHandler> mCompilerHandler;
    std::map <QString, IAlgoViItem*> mObjectsMap;
    std::vector <QMetaObject::Connection> mConnections;
    std::map <QString, int> mPointNum;
    QString mCurrentPrefix;
    int mMode;
};

} // namespace NView

